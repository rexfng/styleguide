/////////////////////////
//					   //
//GLOBAL STYLE SETTINGS//
//					   //
/////////////////////////


//font style
ul{
	margin-bottom:1em;
}

@each $font in $fontStyles{
	#{nth($font,1)}{
		font-family: nth($font,2);
		font-weight: nth($font,3);
		font-size: nth($font,4);
		color: nth($font,5);
		line-height: nth($font,6);
		letter-spacing: nth($font,7);
		margin: nth($font,8);
		padding: nth($font,9);
	}
}
//dropcap 
blockquote > span{
	color: $color-a; 
	font-size: 3em; 
	line-height: .1em; 
	padding: 0 .1em 0 0 ;
	font-family: $font-1; 
	font-weight: 900;
	vertical-align: top;
}
//grid class

$breakpoints: false !default; // check if $breakpoints is defined
$border-box-mode: false !default; // check if $breakpoints is defined
@if $breakpoints{
	@for $i from 1 through 5{
		$max-list : nth($breakpoints, $i);
		$size: nth($max-list, 1);
		$max: nth($max-list, 2);
		@if $i != 5{
			$min-list: nth($breakpoints, $i + 1);
			$min: nth($min-list, 2);
			@media screen and (max-width: $max) and (min-width: $min){
				@for $count from 1 through $gridSize{
					%#{ $size }-offset-#{ $count }{
						margin-left:  100% / $gridSize * $count;
					};	
				}
			}
		}
		@if $i == 5{
			$min: 1px;
			@media screen and (max-width: $max){
				@for $count from 1 through $gridSize{
					%#{ $size }-offset-#{ $count }{
						margin-left:  100% / $gridSize * $count;
					};	
				}
			}
		}
	}
	@each $list in $breakpoints{
		@media screen and (max-width: nth($list, 2)) {
			@for $i from 1 through $gridSize{
				%#{ nth($list, 1) }-#{ $i }{
					width: 100% / $gridSize * $i;
					@if $border-box-mode{
						box-sizing:border-box;
					}
				};		
			}
		}
	}
}